{"version":3,"sources":["Components/TitleBar/styles.js","Components/TitleBar/index.js","state.js","Components/InputArea/Components/Matrix/Components/RowSizer/styles.js","Components/InputArea/Components/Matrix/Components/RowSizer/index.js","Components/InputArea/Components/Matrix/Components/ColSizer/styles.js","Components/InputArea/Components/Matrix/Components/ColSizer/index.js","Components/InputArea/Components/Matrix/styles.js","Components/InputArea/Components/Matrix/index.js","Components/InputArea/Components/Operations/styles.js","Components/InputArea/Components/Operations/index.js","Components/InputArea/styles.js","Components/InputArea/index.js","Components/Display/styles.js","Components/Display/index.js","styles.js","App.js","index.js"],"names":["Bar","styled","div","Title","TitleBar","StateContext","createContext","storage","window","localStorage","initialState","mats","getItem","A","B","JSON","parse","display","StateProvider","children","Provider","value","useState","useStateValue","useContext","Button","button","Container","Label","RowSizer","id","state","setState","onClick","length","newMat","map","inner","slice","pop","removeRow","i","newRow","push","addRow","ColSizer","forEach","row","removeColumn","addColumn","Input","input","Table","table","props","Caption","caption","TR","tr","Body","tbody","Matrix","useEffect","setItem","stringify","Cells","col","j","type","Number","isNaN","onChange","event","x","y","alert","parseInt","setCell","target","Operations","latexOfMat","mat","str","elt","String","raw","rref","M","r","w_M","h_M","swapRows","r1","r2","temp","lead","loop","ind","Rank","sol","reduce","acc","cum","tempMatA","tempMatB","Switch","doRREF","_","toAdd","Array","fill","concat","Inverse","P","w_A","h_A","w_B","h","val","Multiply","h_B","Add","Subtract","InputArea","Item","Display","Latex","require","DisplayItems","displayMode","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69066c1f.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Bar = styled.div`\n\tpadding: 1em;\n    display: flex;\n\talign-items: center;\n\tjustify-content: center;\n    background: #f1faee;\n    border-bottom: 1px solid #1d3557;\n    \n`\n\nexport const Title = styled.div`\n\ttext-align: center;\n\tfont-family: 'Courier New';\n    color: #1d3557;\n\tfont-size: 2em;\n\tmargin: 1em 1.5em 0em 1.5em;\n`","import React from 'react';\nimport { Bar } from './styles';\nimport { Title } from './styles';\n\nconst TitleBar = () => (\n    <Bar>\n        <Title>Matrix Library</Title>\n    </Bar>\n)\n\nexport default TitleBar","import React, {createContext, useContext, useState } from 'react';\n\nexport const StateContext = createContext();\n\nconst storage = window.localStorage;\n\nconst initialState = {\n    mats: storage.getItem('mats') === null ? {A: [[0, 0], [0, 0]], B: [[0, 0], [0, 0]]} : JSON.parse(storage.getItem('mats')),\n    display: [],\n};\n\nexport const StateProvider = ({children}) => {\n\treturn (\n\t\t<StateContext.Provider value={useState(initialState)}>\n\t    \t{children}\n\t\t</StateContext.Provider>\n\t)\n};\n\nexport const useStateValue = () => useContext(StateContext);","import styled from 'styled-components'\n\nexport const Button = styled.button`\n    margin: 0.1em;\n    border: none;\n    font-size: 1em;\n    width: 2em;\n    border-radius: 3em;\n    text-align: center;\n    color: #1d3557;\n    background-color: #f1faee;\n    font-family: 'Courier New';\n    &:hover {\n        background-color: #457b9d;\n        color: #a8dadc;\n    }\n    &:active {\n        background-color: #a8dadc;\n        color: #457b9d;\n    }\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    grid-column: 1;\n    grid-row: 3;  \n    margin-bottom: 1em;\n`\n\nexport const Label = styled.div`\n    font-family: 'Courier New';\n    \n`\n\n","import React from 'react';\nimport { useStateValue } from '../../../../../../state';\nimport { Label, Container, Button } from './styles';\n\nconst RowSizer = ({ id }) => {\n    const [state, setState] = useStateValue();\n\n    const addRow= () => {\n        let newRow = [];\n        var i;\n        for (i = 0; i < state.mats[id][0].length; i++) {\n            newRow.push(0);\n        }\n        let newMat = state.mats[id].map(inner => inner.slice());\n        newMat.push(newRow);\n\t\tsetState({...state, mats: {...state.mats, [id]: newMat}});\n    }\n    \n    const removeRow= () => {\n        if (state.mats[id].length > 1) {\n            let newMat = state.mats[id].map(inner => inner.slice());\n            newMat.pop();\n            setState({...state, mats: {...state.mats, [id]: newMat}});\n        }\n\t}\n\n\treturn (\n        <Container>\n            <Label>Rows: </Label>\n            <Button onClick={() => removeRow()}>-</Button>\n            <Label>/</Label>\n            <Button onClick={() => addRow()}>+</Button>\n        </Container>\n\t);\n}\n\nexport default RowSizer","import styled from 'styled-components'\n\nexport const Button = styled.button`\nmargin: 0.1em;\nborder: none;\nfont-size: 1em;\nwidth: 2em;\nborder-radius: 3em;\ntext-align: center;\ncolor: #1d3557;\nbackground-color: #f1faee;\nfont-family: 'Courier New';\n&:hover {\n    background-color: #457b9d;\n    color: #a8dadc;\n}\n&:active {\n    background-color: #a8dadc;\n    color: #457b9d;\n}\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    grid-column: 2;\n    grid-row: 3;  \n    margin-bottom: 1em;\n`\n\nexport const Label = styled.div`\n    font-family: 'Courier New';\n`\n","import React from 'react';\nimport { useStateValue } from '../../../../../../state';\nimport { Label, Container, Button } from './styles';\n\nconst ColSizer = ({ id }) => {\n    const [state, setState] = useStateValue();\n\n    const addColumn= () => {\n        let newMat = state.mats[id].map(inner => inner.slice());\n        newMat.forEach(row => row.push(0));\n\t\tsetState({...state, mats: {...state.mats, [id]: newMat}});\n    }\n    \n    const removeColumn= () => {\n        if (state.mats[id][0].length > 1) {\n            let newMat = state.mats[id].map(inner => inner.slice());\n            newMat.forEach(row => row.pop());\n            setState({...state, mats: {...state.mats, [id]: newMat}});\n        } \n\t}\n\treturn (\n        <Container>\n            <Label>Columns:</Label>\n            <Button onClick={() => removeColumn()}>-</Button>\n            <Label>/</Label>\n            <Button onClick={() => addColumn()}>+</Button>\n        </Container>\n\t);\n}\n\nexport default ColSizer","import styled from 'styled-components'\n\nexport const Input = styled.input`\n    display: flex;\n    border: none;\n    width: 2em;\n    border: 1px solid #1d3557;\n    font-size: 1.5em;\n    font-family: 'Courier New';\n    border-radius: .3em;\n    text-align: center;\n    background-color: #f1faee;\n    color: #1d3557;\n    &:hover {\n        background-color: #a8dadc;\n    }\n`\n\nexport const Table = styled.table`\n    \n    margin: 0em 5em 0em 5em;\n    display: grid;\n    grid-column: ${props => props.id === 'A' ? 1 : 3};\n    text-align: center;\n    justify-content: center;\n`\n\nexport const Caption = styled.caption`\n    font-family: 'Courier New';\n    color: #1d3557;\n    font-size: 1.5em;\n    margin: 0.5em;\n    grid-column: 1 / 3;\n    grid-row: 1;\n`\n\nexport const TR = styled.tr`\n`\n\nexport const Body = styled.tbody`\noverflow: scroll;\n    grid-column: 1 / 3;\n    grid-row: 2;   \n    margin-bottom: 1em;\n    width: 20em;\n    height: 15em;\n\n\n`\n\n","import React, { useEffect } from 'react';\nimport { useStateValue } from '../../../../state';\nimport RowSizer from './Components/RowSizer/index';\nimport ColSizer from './Components/ColSizer/index';\nimport { TR, Body, Caption, Table, Input } from './styles'\n\nconst Matrix = ({ id }) => {\n\tconst [state, setState] = useStateValue();\n\n\tconst storage = window.localStorage;\n    useEffect(() => storage.setItem('mats', JSON.stringify(state.mats)));\n\n    const setCell = (x, y, value) => {\n        if (value != \"\" && value != \"-\" && isNaN(value)) {\n            alert(\"Please input real numbers only\");\n        }\n        if (!value === \"-\") {\n            value = parseInt(value);\n        }\n        let newMat = state.mats[id].map(inner => inner.slice());\n        newMat[x][y] = value;\n        setState({...state, mats: {...state.mats, [id]: newMat}});\n\t}\n\n\tconst Cells = state.mats[id].map((row, i) =>\n        <TR> {row.map((col, j) => \n                <th> <Input \n                        type= \"text\" \n                        value = {Number.isNaN(col) ? \"\" : col}\n                        onChange={event => setCell(i, j, event.target.value)}\n                        /> </th>\n            )} </TR>\n    );\n    \n\treturn (\n            <Table id={id}>\n                <Caption>{id}</Caption>\n                <Body>{Cells} </Body>\n                <RowSizer id={id}/>\n                <ColSizer id={id}/> \n            </Table> \n\t\t\n\t);\n}\n\nexport default Matrix","import styled from 'styled-components'\n\nexport const Button = styled.button`\n    margin: 0.3m;\n    padding: 0.3em;\n    width: 6em;\n    border: none;\n    font-size: 1em;\n    border-radius: 3em;\n    text-align: center;\n    color: #a8dadc;\n    background-color: #1d3557;\n    font-family: 'Courier New';\n    &:hover {\n        background-color: #457b9d;\n        color: #a8dadc;\n    }\n    &:active {\n        background-color: #a8dadc;\n        color: #457b9d;\n    }\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 20em;\n    flex-basis: 0;\n    flex: 1 1 0px;\n    align-self: center;\n    grid-column: 2;\n`\n","import React from 'react';\nimport { useStateValue } from '../../../../state';\nimport { Container, Button } from './styles';\n\nconst Operations = () => {\n    const [state, setState] = useStateValue();\n\n    const latexOfMat = (mat) => {\n        var str = ``;\n        mat.forEach(row => {\n            row.forEach(\n                elt => str += (elt + `&`)\n            );\n            str = str.slice(0, -1);\n            str += String.raw`\\\\`; \n        })\n        str = str.slice(0, -2);\n        return String.raw`\\left( \\begin{array}{ccc}` + str + String.raw`\\end{array} \\right)`;\n    }\n\n    const Switch = () => {\n        let tempMatA = state.mats['A'].map(inner => inner.slice());\n        let tempMatB = state.mats['B'].map(inner => inner.slice());\n        setState({...state, mats: {B: tempMatA, A: tempMatB}});\n    }\n\n    const Multiply = () => {\n        var P = [];\n\n        var w_A = state.mats['A'][0].length;\n        var h_A = state.mats['A'].length;\n        var w_B = state.mats['B'][0].length;\n        var h_B = state.mats['B'].length;\n\n        if (w_A !== h_B) {\n            alert('Not compatible for multiplication');\n            return;\n        }\n        \n        var i;\n        for (i = 0; i < h_A; i++) {\n            var row = [];\n            var j;\n            for (j = 0; j < w_B; j++) {\n                var val = 0;\n                var h;\n                for (h = 0; h < w_A; h++) {\n                    val += state.mats['A'][i][h] * state.mats['B'][h][j];\n                }\n                row.push(val);\n            };\n            P.push(row);\n        }\n\n        var str = `$$` \n            + latexOfMat(state.mats['A']) \n            + String.raw`\\cdot` \n            + latexOfMat(state.mats['B']) \n            + `=`\n            + latexOfMat(P) \n            + `$$`;\n\n\t\tsetState({...state, display: [str, ...state.display]});\n    }\n\n    const Subtract = () => {\n        var P = [];\n\n        var w_A = state.mats['A'][0].length;\n        var h_A = state.mats['A'].length;\n        var w_B = state.mats['B'][0].length;\n        var h_B = state.mats['B'].length;\n\n        if (w_A !== w_B || h_A !== h_B) {\n            alert('Not compatible for subtraction');\n            return;\n        }\n        \n        var i;\n        for (i = 0; i < h_A; i++) {\n            var row = [];\n            var j;\n            for (j = 0; j < w_A; j++) {\n                row.push(state.mats['A'][i][j] - state.mats['B'][i][j]);\n            };\n            P.push(row);\n        }\n\n        var str = `$$` \n            + latexOfMat(state.mats['A']) \n            + String.raw`-` \n            + latexOfMat(state.mats['B']) \n            + `=`\n            + latexOfMat(P) \n        + `$$`;\n\n\t\tsetState({...state, display: [str, ...state.display]});\n    }\n\n    const Add = () => {\n        var P = [];\n\n        var w_A = state.mats['A'][0].length;\n        var h_A = state.mats['A'].length;\n        var w_B = state.mats['B'][0].length;\n        var h_B = state.mats['B'].length;\n\n        if (w_A !== w_B || h_A !== h_B) {\n            alert('Not compatible for addition');\n            return;\n        }\n        \n        var i;\n        for (i = 0; i < h_A; i++) {\n            var row = [];\n            var j;\n            for (j = 0; j < w_A; j++) {\n                row.push(state.mats['A'][i][j] + state.mats['B'][i][j]);\n            };\n            P.push(row);\n        }\n\n        var str = `$$` \n            + latexOfMat(state.mats['A']) \n            + String.raw`+` \n            + latexOfMat(state.mats['B']) \n            + `=`\n            + latexOfMat(P) \n        + `$$`;\n\n\t\tsetState({...state, display: [str, ...state.display]});\n    }\n\n    const rref = (M) => {\n\n        var w_M = M[0].length;\n        var h_M = M.length;\n      \n        const swapRows = (M, r1, r2) => {\n            var temp = M[r1];\n            M[r1] = M[r2];\n            M[r2] = temp;\n        }\n\n        var lead = 0;\n        var r;\n        loop:\n            for (r = 0; r < h_M; ++r) {\n                if (w_M <= lead) {\n                    break loop;\n                }\n                var i = r;\n                while (M[i][lead] === 0) {\n                    ++i;\n                    if (h_M == i) {\n                        i = r;\n                        ++lead;\n                        if (w_M = lead) {\n                            break loop;\n                        }\n                    }\n                }\n                swapRows(M, i, r);\n                if (M[r][lead] != 0) {\n                    M[r].forEach((x, ind) => M[r][ind] = x / M[r][lead]);\n                }\n                var i;\n                for (i = 0; i < h_M; ++i) {\n                    if (i != r) {\n                        M[i].forEach((x, ind) => M[i][ind] = x - (M[i][lead] * M[r][ind]))\n                    }\n                }\n                ++lead;\n            }\n    }\n\n    const doRREF = () => {\n\n        var M = state.mats['A'].map(inner => inner.slice());\n        rref(M);\n\n        var str = `$$` \n            + String.raw`\\mathrm{rref}`\n            + latexOfMat(state.mats['A']) \n            + `=`\n            + latexOfMat(M)\n            + `$$`;\n\n\t\tsetState({...state, display: [str, ...state.display]});\n    }\n    \n    const Inverse = () => {\n        var M = state.mats['A'].map(inner => inner.slice());\n\n        var h_M = M.length;\n        var w_M = M.length;\n\n        M.forEach((_, ind) => {\n            var toAdd = new Array(w_M).fill(0);\n            toAdd[ind] = 1;\n            M[ind] = M[ind].concat(toAdd)\n        });\n\n        rref(M);\n\n        var str = `$$` \n            + String.raw`\\mathrm{inverse}`\n            + latexOfMat(state.mats['A']) \n            + `=`\n            + latexOfMat(M)\n            + `$$`;\n\n\t\tsetState({...state, display: [str, ...state.display]});\n    }\n\n    const Rank = () => {\n\n        var M = state.mats['A'].map(inner => inner.slice());\n\n        rref(M);\n\n        var h_M = M.length;\n        var sol = 0;\n        var r;\n        for (r = 0; r < h_M; ++r) {\n            if (M[r].reduce((acc, cum) => acc || cum)) {\n                ++sol;\n            }\n        }\n\n        var str = `$$` \n            + String.raw`\\mathrm{rank}`\n            + latexOfMat(state.mats['A']) \n            + `=`\n            + sol\n            + `$$`;\n\n\t\tsetState({...state, display: [str, ...state.display]});\n    }\n\n    const clear = () => (\n        setState({...state, display: []})\n    );\n\n\treturn (\n        <Container>\n            <Button onClick={() => Switch()}>switch</Button>\n            <Button onClick={() => doRREF()}>rref</Button>\n            <Button onClick={() => Rank()}>rank</Button>\n            <Button onClick={() => Inverse()}>inv</Button>\n            <Button onClick={() => Rank()}>det</Button>\n            <Button onClick={() => Rank()}>eig</Button>\n            <Button onClick={() => Rank()}>diag</Button>\n            <Button onClick={() => Multiply()}>x</Button>\n            <Button onClick={() => Add()}>+</Button>\n            <Button onClick={() => Subtract()}>-</Button>\n            <Button onClick={() => clear()}>clear</Button>\n        </Container>\n\t);\n}\n\nexport default Operations","import styled from 'styled-components'\n\nexport const Container = styled.div`\n\tpadding: 1em;\n    display: grid;\n\talign-items: top;\n\tjustify-content: space-evenly;\n`\n","import React from 'react';\nimport Matrix from './Components/Matrix/index'\nimport Operations from './Components/Operations/index'\nimport { Container } from './styles';\n\n\nconst InputArea = () => (\n    <Container>\n        <Matrix id={\"A\"}/>\n        <Operations> </ Operations>\n        <Matrix id={\"B\"}/>\n    </Container>\n)\n\nexport default InputArea","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    font-size: 1em;\n    color: #1d3557;\n    border-top: 1px solid #1d3557;\n    justify-self: center;\n`\n\nexport const Item = styled.div`\n    box-sizing: border-box;\n    border-bottom: 1px solid #1d3557;\n    margin-top: -1px;\n`\n\n","import React from 'react';\nimport { useStateValue } from '../../state';\nimport { Container, Item } from './styles';\n\nconst Display = () => {\n    const [state, setState] = useStateValue();\n\n    var Latex = require('react-latex');\n\n    const DisplayItems = state.display.map(str =>\n        <Item>\n            <Latex displayMode={true}>{str}</Latex>\n        </Item>\n        \n    );\n\n    return (\n        <Container>{DisplayItems}</Container>\n\t);\n}\n\nexport default Display","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    margin: auto;\n    width: 60em;\n    height: 40em;\n`\nexport const Footer = styled.div`\n    font-family: 'Courier New';\n    color: #1d3557;\n    margin-top: 1em;\n    padding-bottom: 4em;\n`\n","import React from 'react';\nimport TitleBar from './Components/TitleBar/index'\nimport { StateProvider } from './state'\nimport InputArea from './Components/InputArea/index';\nimport Display from './Components/Display/index';\nimport { Container, Footer } from './styles';\n\nconst App = () => {\n\treturn (\n\t\t<StateProvider>\n      <Container>\n        <TitleBar />\n        <InputArea />\n        <Display />\n        <Footer>Made by Rodney Lafuente Mercado for Math 121</Footer>\n      </Container>\n\t\t</StateProvider>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n\t\t<App />\n\t,\n\tdocument.getElementById('root'))"],"sourceRoot":""}